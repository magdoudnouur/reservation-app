{"ast":null,"code":"const bcrypt = require('bcrypt');\nasync function registerUser(req, res) {\n  const {\n    username,\n    password,\n    role\n  } = req.body;\n  if (!username || !password || !role) {\n    return res.status(400).json({\n      message: 'Champs manquants'\n    });\n  }\n  try {\n    const hashedPassword = await bcrypt.hash(password, 10); // <-- Hashage ici\n\n    // Insère en base avec hashedPassword\n    await connection.execute('INSERT INTO users (username, password, role) VALUES (?, ?, ?)', [username, hashedPassword, role]);\n    res.status(201).json({\n      message: 'Utilisateur créé'\n    });\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({\n      message: 'Erreur serveur'\n    });\n  }\n}","map":{"version":3,"names":["bcrypt","require","registerUser","req","res","username","password","role","body","status","json","message","hashedPassword","hash","connection","execute","err","console","error"],"sources":["C:/Users/Lenovo/Desktop/LOG/frontend/src/login.js"],"sourcesContent":["const bcrypt = require('bcrypt');\r\n\r\nasync function registerUser(req, res) {\r\n  const { username, password, role } = req.body;\r\n\r\n  if (!username || !password || !role) {\r\n    return res.status(400).json({ message: 'Champs manquants' });\r\n  }\r\n\r\n  try {\r\n    const hashedPassword = await bcrypt.hash(password, 10); // <-- Hashage ici\r\n\r\n    // Insère en base avec hashedPassword\r\n    await connection.execute(\r\n      'INSERT INTO users (username, password, role) VALUES (?, ?, ?)',\r\n      [username, hashedPassword, role]\r\n    );\r\n\r\n    res.status(201).json({ message: 'Utilisateur créé' });\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: 'Erreur serveur' });\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEhC,eAAeC,YAAYA,CAACC,GAAG,EAAEC,GAAG,EAAE;EACpC,MAAM;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGJ,GAAG,CAACK,IAAI;EAE7C,IAAI,CAACH,QAAQ,IAAI,CAACC,QAAQ,IAAI,CAACC,IAAI,EAAE;IACnC,OAAOH,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAmB,CAAC,CAAC;EAC9D;EAEA,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMZ,MAAM,CAACa,IAAI,CAACP,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;;IAExD;IACA,MAAMQ,UAAU,CAACC,OAAO,CACtB,+DAA+D,EAC/D,CAACV,QAAQ,EAAEO,cAAc,EAAEL,IAAI,CACjC,CAAC;IAEDH,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAmB,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBZ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAiB,CAAC,CAAC;EACrD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}