{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\LOG\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminDashboard() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [editingUserId, setEditingUserId] = useState(null);\n  const [editUsername, setEditUsername] = useState('');\n  const [editPassword, setEditPassword] = useState('');\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Charger la liste des utilisateurs\n  const fetchUsers = async () => {\n    try {\n      const res = await fetch('http://localhost:4000/api/users');\n      const data = await res.json();\n      setUsers(data);\n    } catch (error) {\n      alert('Erreur lors du chargement des utilisateurs');\n    }\n  };\n\n  // Ajouter un utilisateur\n  const addUser = async () => {\n    if (!username || !password) {\n      alert('Veuillez remplir tous les champs');\n      return;\n    }\n    try {\n      await fetch('http://localhost:4000/api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      setUsername('');\n      setPassword('');\n      fetchUsers();\n    } catch {\n      alert('Erreur lors de l\\'ajout');\n    }\n  };\n\n  // Commencer à éditer un utilisateur\n  const startEdit = user => {\n    setEditingUserId(user.id);\n    setEditUsername(user.username);\n    setEditPassword('');\n  };\n\n  // Annuler l'édition\n  const cancelEdit = () => {\n    setEditingUserId(null);\n    setEditUsername('');\n    setEditPassword('');\n  };\n\n  // Sauvegarder les modifications\n  const saveEdit = async () => {\n    if (!editUsername) {\n      alert('Le nom d\\'utilisateur ne peut pas être vide');\n      return;\n    }\n    try {\n      await fetch(`http://localhost:4000/api/users/${editingUserId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: editUsername,\n          password: editPassword\n        })\n      });\n      cancelEdit();\n      fetchUsers();\n    } catch {\n      alert('Erreur lors de la modification');\n    }\n  };\n\n  // Supprimer un utilisateur\n  const deleteUser = async id => {\n    if (!window.confirm('Voulez-vous vraiment supprimer cet utilisateur ?')) return;\n    try {\n      await fetch(`http://localhost:4000/api/users/${id}`, {\n        method: 'DELETE'\n      });\n      fetchUsers();\n    } catch {\n      alert('Erreur lors de la suppression');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard Admin - Gestion des utilisateurs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ajouter un utilisateur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Nom d'utilisateur\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Mot de passe\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addUser,\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Liste des utilisateurs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: 'none',\n        padding: 0\n      },\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: 12\n        },\n        children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: editUsername,\n            onChange: e => setEditUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Nouveau mot de passe (optionnel)\",\n            value: editPassword,\n            onChange: e => setEditPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveEdit,\n            children: \"Sauvegarder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cancelEdit,\n            style: {\n              marginLeft: 5\n            },\n            children: \"Annuler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startEdit(user),\n            style: {\n              marginLeft: 10\n            },\n            children: \"Modifier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteUser(user.id),\n            style: {\n              marginLeft: 10,\n              color: 'red'\n            },\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"MV78UgiIAqEh6y18QCRWKGexv/o=\");\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","users","setUsers","username","setUsername","password","setPassword","editingUserId","setEditingUserId","editUsername","setEditUsername","editPassword","setEditPassword","fetchUsers","res","fetch","data","json","error","alert","addUser","method","headers","body","JSON","stringify","startEdit","user","id","cancelEdit","saveEdit","deleteUser","window","confirm","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","type","onClick","listStyle","map","marginBottom","marginLeft","color","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/LOG/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport default function AdminDashboard() {\r\n  const [users, setUsers] = useState([]);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [editingUserId, setEditingUserId] = useState(null);\r\n  const [editUsername, setEditUsername] = useState('');\r\n  const [editPassword, setEditPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Charger la liste des utilisateurs\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:4000/api/users');\r\n      const data = await res.json();\r\n      setUsers(data);\r\n    } catch (error) {\r\n      alert('Erreur lors du chargement des utilisateurs');\r\n    }\r\n  };\r\n\r\n  // Ajouter un utilisateur\r\n  const addUser = async () => {\r\n    if (!username || !password) {\r\n      alert('Veuillez remplir tous les champs');\r\n      return;\r\n    }\r\n    try {\r\n      await fetch('http://localhost:4000/api/users', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n      setUsername('');\r\n      setPassword('');\r\n      fetchUsers();\r\n    } catch {\r\n      alert('Erreur lors de l\\'ajout');\r\n    }\r\n  };\r\n\r\n  // Commencer à éditer un utilisateur\r\n  const startEdit = (user) => {\r\n    setEditingUserId(user.id);\r\n    setEditUsername(user.username);\r\n    setEditPassword('');\r\n  };\r\n\r\n  // Annuler l'édition\r\n  const cancelEdit = () => {\r\n    setEditingUserId(null);\r\n    setEditUsername('');\r\n    setEditPassword('');\r\n  };\r\n\r\n  // Sauvegarder les modifications\r\n  const saveEdit = async () => {\r\n    if (!editUsername) {\r\n      alert('Le nom d\\'utilisateur ne peut pas être vide');\r\n      return;\r\n    }\r\n    try {\r\n      await fetch(`http://localhost:4000/api/users/${editingUserId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username: editUsername, password: editPassword }),\r\n      });\r\n      cancelEdit();\r\n      fetchUsers();\r\n    } catch {\r\n      alert('Erreur lors de la modification');\r\n    }\r\n  };\r\n\r\n  // Supprimer un utilisateur\r\n  const deleteUser = async (id) => {\r\n    if (!window.confirm('Voulez-vous vraiment supprimer cet utilisateur ?')) return;\r\n    try {\r\n      await fetch(`http://localhost:4000/api/users/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      fetchUsers();\r\n    } catch {\r\n      alert('Erreur lors de la suppression');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h1>Dashboard Admin - Gestion des utilisateurs</h1>\r\n\r\n      <h2>Ajouter un utilisateur</h2>\r\n      <input\r\n        placeholder=\"Nom d'utilisateur\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Mot de passe\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={addUser}>Ajouter</button>\r\n\r\n      <h2>Liste des utilisateurs</h2>\r\n      <ul style={{ listStyle: 'none', padding: 0 }}>\r\n        {users.map((user) => (\r\n          <li key={user.id} style={{ marginBottom: 12 }}>\r\n            {editingUserId === user.id ? (\r\n              <>\r\n                <input\r\n                  value={editUsername}\r\n                  onChange={(e) => setEditUsername(e.target.value)}\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Nouveau mot de passe (optionnel)\"\r\n                  value={editPassword}\r\n                  onChange={(e) => setEditPassword(e.target.value)}\r\n                />\r\n                <button onClick={saveEdit}>Sauvegarder</button>\r\n                <button onClick={cancelEdit} style={{ marginLeft: 5 }}>\r\n                  Annuler\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <strong>{user.username}</strong>\r\n                <button onClick={() => startEdit(user)} style={{ marginLeft: 10 }}>\r\n                  Modifier\r\n                </button>\r\n                <button\r\n                  onClick={() => deleteUser(user.id)}\r\n                  style={{ marginLeft: 10, color: 'red' }}\r\n                >\r\n                  Supprimer\r\n                </button>\r\n              </>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}